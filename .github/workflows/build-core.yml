name: Build Core
on:
  push:
    branches:
      - v2.x/staging
  pull_request:
    types: [opened, reopened, synchronize]

  workflow_dispatch:
    inputs: 
      ZLUX_APP_MANAGER:
        description: 'zlux-app-manager PR number'
        required: false
      ZLUX_APP_SERVER:
        description: 'zlux-app-server PR number'
        required: false
      ZLUX_BUILD:
        description: 'zlux-build PR number'
        required: false
      ZLUX_PLATFORM:
        description: 'zlux-platform PR number'
        required: false
        
      ZLUX_SERVER_FRAMEWORK:
        description: 'zlux-server-framework PR number'
        required: false
      ZLUX_SHARED:
        description: 'zlux-shared PR number'
        required: false
      DEFAULT_BRANCH:
        description: 'please enter the default branch you would like to build with, default will be v2.x/staging'
        required: false
        default: 'v2.x/staging'

jobs:
  check-permission:
    runs-on: ubuntu-latest
    steps:
      # this action will fail the whole workflow if permission check fails
      - name: check permission
        uses: zowe-actions/shared-actions/permission-check@main
        with:
          user: ${{ github.actor }}
          github-repo: ${{ github.repository }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

  update-changelog:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    outputs:
      was_updated: ${{ steps.check-change.outputs.change_detected }}
      check_commit: ${{ steps.check-changelog.outputs.check_commit }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Check for updated CHANGELOG.md using git
        id: check-changelog
        run: |
          if git diff --name-only origin/${{ github.base_ref }} | grep -q "^CHANGELOG.md$"; then
            echo "CHANGELOG.md has been updated."
            echo "::set-output name=check_commit::true"
          else
            echo "ERROR: CHANGELOG.md has not been updated."
            echo "::set-output name=check_commit::false"
          fi
      - name: Compare PR description with template
        if: steps.check-changelog.outputs.check_commit == 'false'
        env:
          PR_DESCRIPTION: ${{ github.event.pull_request.body }}
        run: |
          # Safely print the PR description using Node.js
          
          node -e "const fs=require('fs'); fs.writeFileSync('/tmp/pr_description.txt', process.env.PR_DESCRIPTION);"
          # Use diff to compare the two files
          if diff -wB /tmp/pr_description.txt .github/pull_request_template.md > /dev/null; then
            echo "ERROR: PR description is identical to the template."
            exit 1
          else
            echo "PR description and template are different."
          fi

      - name: Check PR body against changelog
        if: steps.check-changelog.outputs.check_commit == 'false'
        id: extract-changelog
        run: |
          result=$(node .github/workflows/set-changelog.js ${{ github.event.pull_request.number }})
          if [ "$result" = "Success" ]; then
            git config --global user.email "zowe-robot@users.noreply.github.com"
            git config --global user.name "Zowe Robot"
            git add CHANGELOG.md
            git commit -s -m "Update changelog with PR #${{ github.event.pull_request.number }} description"
            git push
            echo "Updated CHANGELOG from description"
          else
            echo $result
            echo -e "No changelog and version information found in PR description. Please add them.\nExpected Format:\nVERSION:vX.XX.X\nCHANGELOG:This is changelog note.\nTo re-run the action, just make a push or commit after updating the PR description or updating the changelog via a manual file changing commit."
            exit 1
          fi

      - name: check for changes
        id: check-change
        run: |
          if git diff --name-only HEAD^ HEAD | grep 'changelog.md'; then
            echo "No Changes detected, setting flag to false"
            echo "::set-output name=change_detected::false"
          else
            echo "::set-output name=change_detected::true"
            fi
  check_changelog:
    if: github.event_name == 'pull_request'
    needs: update-changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Verify Changelog update
        run: |
          if [ "${{ needs.update-changelog.outputs.was_updated }}" != "true" ]; then
            echo "CHANGELOG.md not updated, please update CHANGELOG.md with the changes made in the pull request"
            exit 1
          else
            echo "changelog was updated successfully."
          fi
  build:
    runs-on: ubuntu-latest
    needs: check-permission
    steps:
      - name: '[Prep 1] Cache node modules'
        uses: actions/cache@v2
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: |
            ~/.npm
            ~/.nvm/.cache
            ~/.nvm/versions
          key: ${{ runner.os }}-build-cache-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-cache-node-modules-
      - name: '[Prep 2] Setup Node'
        uses: actions/setup-node@v2
        with:
          node-version: 16.15.0

      - name: '[Prep 3] Setup jFrog CLI'
        uses: jfrog/setup-jfrog-cli@v2
        env:
          JF_ARTIFACTORY_1: ${{ secrets.JF_ARTIFACTORY_TOKEN }}

      - name: '[Prep 4] prepare workflow'
        uses: zowe-actions/zlux-builds/core/prepare@v2.x/main
        with:
          github-user: ${{ secrets.ZOWE_ROBOT_USER }}
          github-password: ${{ secrets.ZOWE_ROBOT_TOKEN }}
          github-email: ${{ secrets.ZOWE_ROBOT_EMAIL }}
          github-branch: ${{ github.event.inputs.BRANCH_NAME }}
          default-base: ${{ github.event.inputs.DEFAULT_BRANCH }}

      - name: '[Prep 5] build'
        uses: zowe-actions/zlux-builds/core/build@v2.x/main
        with:
          zlux-app-manager: ${{ github.event.inputs.ZLUX_APP_MANAGER }}
          zlux-app-server: ${{ github.event.inputs.ZLUX_APP_SERVER }}
          zlux-build: ${{ github.event.inputs.ZLUX_BUILD }}
          zlux-platform: ${{ github.event.inputs.ZLUX_PLATFORM }}
          zlux-server-framework: ${{ github.event.inputs.ZLUX_SERVER_FRAMEWORK }}
          zlux-shared: ${{ github.event.inputs.ZLUX_SHARED }}

      - name: '[Prep 6] packaging'
        uses: zowe-actions/zlux-builds/core/package@v2.x/main
        with:
          pax-ssh-username: ${{ secrets.SSH_MARIST_USERNAME }}
          pax-ssh-password: ${{ secrets.SSH_MARIST_RACF_PASSWORD }}
          pax-name: zlux-core

      - name: '[Prep 7] deploy'
        uses: zowe-actions/zlux-builds/core/deploy@v2.x/main
